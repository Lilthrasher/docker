name: Redeploy Containers With Changes

on:
  push:
    branches:
      - main
    paths:
      - '**/docker-compose.yaml' # Trigger the workflow on changes to YAML files
  workflow_dispatch:

jobs:
  Redeploy:
    runs-on: self-hosted

    # env:
    #   CHANGED_FILES_CSV: ""
    #   SUCCESSFUL_CONTAINERS: ""

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Identify changed Docker Compose files
      id: changed-files
      run: |
        CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.event.before }} ${{ github.sha }} | grep '\.yaml$' | grep -vE '\.github/workflows/.*\.yaml$' || true)
        CHANGED_FILES_CSV=$(echo "$CHANGED_FILES" | tr '\n' ',' | sed 's/,$//')
        echo "Changed files: $CHANGED_FILES_CSV"
        echo "::set-output name=files::$CHANGED_FILES_CSV"

    - name: Copy and Test Docker Container Changes
      run: |
        mkdir /home/kyle/docker-temp/
        IFS=',' read -ra FILES <<< "${{ steps.changed-files.outputs.files }}"
        for file in "${FILES[@]}"; do
          echo "Copying $file to temporary folder..."
          cp -f "$file" /home/kyle/docker-temp/"$file"
        done
        cd /home/kyle/docker-temp/

        IFS=',' read -ra FILES <<< "${{ steps.changed-files.outputs.files }}"
        for file in "${FILES[@]}"; do
          service_name=$(dirname "$file" | xargs basename)
          echo "Testing $file..."
          if DEPLOY_OUTPUT=$(docker compose -f "$file" up -d --force-recreate 2>&1); then
            SUCCESSFUL_CONTAINERS+="$file,"
            docker compose down
            echo "Test Passed"
          else
            curl \
              -u ${{ secrets.NTFY_LOGIN }} \
              -H "Title: Redeployment Failed" \
              -H "Tags: warning" \
              -H "Content-Type: text/plain" \
              -d "$service_name encountered an error while testing.
              Error: $(echo "$DEPLOY_OUTPUT" | cut -d':' -f2- | sed 's/^[ \t]*//;s/[ \t]*$//')" \
              ${{ secrets.NTFY_URL }}
              exit 1
          fi
        done

    - name: Copy and Deploy Passing Containers
      run: |
        cd /home/kyle/actions-runner/_work/homelab-docker/homelab-docker
        IFS=',' read -ra FILES <<< "$SUCCESSFUL_CONTAINERS"
        for file in "${FILES[@]}"; do
          echo "Copying $file to server..."
          cp -f "$file" /home/kyle/docker-files/"$file"
        done
        cd /home/kyle/docker-files/

        IFS=',' read -ra FILES <<< "$SUCCESSFUL_CONTAINERS"
        for file in "${FILES[@]}"; do
          service_name=$(dirname "$file" | xargs basename)
          echo "Updating $file..."
          if DEPLOY_OUTPUT=$(docker compose -f "$file" up -d --force-recreate 2>&1); then
            curl \
              -u ${{ secrets.NTFY_LOGIN }} \
              -H "Title: Container Redeployed" \
              -H "Tags: tada" \
              -H "Content-Type: text/plain" \
              -d "$service_name was redeployed successfully." \
              ${{ secrets.NTFY_URL }}
          else
            curl \
              -u ${{ secrets.NTFY_LOGIN }} \
              -H "Title: Redeployment Failed" \
              -H "Tags: warning" \
              -H "Content-Type: text/plain" \
              -d "$service_name encountered an error while redeploying.
              Error: $(echo "$DEPLOY_OUTPUT" | cut -d':' -f2- | sed 's/^[ \t]*//;s/[ \t]*$//')" \
              ${{ secrets.NTFY_URL }}
              exit 1
          fi
        done